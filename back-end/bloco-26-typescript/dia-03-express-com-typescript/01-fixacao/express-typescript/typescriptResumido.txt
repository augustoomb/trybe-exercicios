MEU PASSO A PASSO EXPRESS COM NODE

    -INICIAR PROJETO NORMALMENTE: npm init -y

    -INSTALAR DEPENDÊNCIA TYPESCRIPT: npm install -D typescript

    -INSTALAR PARA TIPAGEM SER ACEITA NO EXPRESS-NODE: npm i --save-dev @types/node
        
        npm i --save-dev @types/express

    -INSTALAR UM "NODEMOM" PARA TYPESCRIPT: npm i ts-node-dev --save-dev

        No script do package.json, na chave "scripts", colocar: "dev": "tsnd --respawn --transpile-only src/server.ts",

    -FAZER MEU CÓDIGO NORMALMENTE, USANDO REGRAS DO TS

    -TSCONFIG: tsc --init OU criar na mão um tsconfig.json

        OU npm i -D @tsconfig/node16 (se eu quiser pegar um pronto

    -RODAR O TSC(compliar) PARA O ARQUIVO: npx tsc index.ts

        OU PARA TODO O PROJETO: npx tsc

        flag -w mantem o compilador rodando, gerando os arquivos em js em tempo real: npx tsc -w

    -(ISSO FARÁ COM QUE SEJA GERADO UM ARQUIVO IGUAL AO MEU ts CRIADO ACIMA, PORÉM COM A EXTENSÃO js

    -EU DEVO RODAR O ARQUIVO GERADO (js) E NÃO O QUE EU ESCREVI  (ts):  node ./dist/index.js


-------------------
PASSO A PASSO DO COURSE (DIA 26.3)

    -CRIAR DIRETÓRIO: mkdir express-typescript && cd express-typescript

    -INICIAR PROJETO: npm init -y

    -INSTALAR TYPESCRIPT(COMO DEPEND DE DESENV): npm install -D typescript

    -CRIAR ARQUIVO tsconfig.json:

            {
              "compilerOptions": {
                "module": "commonjs",
                "target": "es6",
                "rootDir": "./",
                "outDir": "./dist",
                "esModuleInterop": true,
                "strict": true
              }
            }

    -INSTALAR DEPENDENCIA PARA TIPOS DO NODE: npm install -D @types/node

    -INSTALAR ts-node-dev (ESTILO UM NODEMON): npm install -D ts-node-dev

    -INSTALAR EXPRESS: npm install express

    -PACOTE TIPOS PARA EXPRESS: npm install -D @types/express

    -INSTALAR mysql E dotenv: npm i mysql2 dotenv

    -LIB PARA LIDAR COM HTTP DE FORMA MAIS SIMPLES: npm install http-status-codes

    (a partir daqui, vou citar apenas os arquivos. Para saber o conteúdo a colocar em cada um, ver o arquivo completo do bloco - typescript.txt)    

    -CRIAR ARQUIVO index.ts

    -EDITAR PACKAGE.JSON COM NPM START E DEV

    -LIB QUE DISPARA DIRETAMENTE O MEU MIDDLEWARE DE ERRO, SEU EU PRECISAR ESCREVER TRY/CATCH TODA HORA: npm install express-async-errors

    -MAIS LIBS PARA AJUDAR NO TRATAMENTO DE ERROS: npm install restify-errors @types/restify-errors












